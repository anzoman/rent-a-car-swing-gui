/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.bulenkov.darcula.DarculaLaf;
import java.awt.Dialog;
import java.text.SimpleDateFormat;
import javax.swing.*;
import java.util.Hashtable;
import java.util.Date;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableModel;
import javax.swing.text.AttributeSet;
import javax.swing.plaf.basic.BasicLookAndFeel;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import javax.swing.UIManager;
import javax.swing.JFormattedTextField.AbstractFormatter;
import java.text.ParseException;

/**
 *
 * @author Anže Luzar
 */
public class IzposojevalnicaAvtomobilov extends javax.swing.JFrame {

    /**
     * Creates new form Podatki
     */
    public IzposojevalnicaAvtomobilov() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        spolButtonGroup = new javax.swing.ButtonGroup();
        motorButtonGroup = new javax.swing.ButtonGroup();
        menjalnikButtonGroup = new javax.swing.ButtonGroup();
        nacinPlacilaButtonGroup = new javax.swing.ButtonGroup();
        placiloKarticaDialog = new javax.swing.JDialog();
        ccvKodaLabel = new javax.swing.JLabel();
        stevilkaKarticeLabel = new javax.swing.JLabel();
        prekliciPlaciloButton = new javax.swing.JButton();
        potrdiPlaciloButton = new javax.swing.JButton();
        stevilkaKarticePasswordField = new javax.swing.JPasswordField();
        ccvKodaPasswordField = new javax.swing.JPasswordField();
        pokaziCcvRadioButton = new javax.swing.JRadioButton();
        pokaziStevilkoKarticeRadioButton = new javax.swing.JRadioButton();
        izvediPlaciloDialog = new javax.swing.JDialog();
        izvediPlaciloLabel = new javax.swing.JLabel();
        placiloProgressBar = new javax.swing.JProgressBar();
        cardLayoutPanel = new javax.swing.JPanel();
        dobrodosliPanel = new javax.swing.JPanel();
        avtekLabel = new javax.swing.JLabel();
        vstopiteButton = new javax.swing.JButton();
        dobrodosliLabel = new javax.swing.JLabel();
        seminarskaLabel = new javax.swing.JLabel();
        avtekLabel2 = new javax.swing.JLabel();
        avtorLabel = new javax.swing.JLabel();
        prevzemVrnitevPanel = new javax.swing.JPanel();
        mestoVrnitveLabel = new javax.swing.JLabel();
        datumPrevzemaLabel = new javax.swing.JLabel();
        uraPrevzemaLabel = new javax.swing.JLabel();
        mestoPrevzemaLabel = new javax.swing.JLabel();
        uraVrnitveLabel = new javax.swing.JLabel();
        datumVrnitveLabel = new javax.swing.JLabel();
        casPrevzemaSpinner = new javax.swing.JSpinner();
        casVrnitveSpinner = new javax.swing.JSpinner();
        datumPrevzemaSpinner = new javax.swing.JSpinner();
        datumVrnitveSpinner = new javax.swing.JSpinner();
        mestoPrevzemaComboBox = new javax.swing.JComboBox<>();
        mestoVrnitveComboBox = new javax.swing.JComboBox<>();
        org.jdatepicker.UtilDateModel modelPrevzem = new org.jdatepicker.UtilDateModel();
        datumPrevzemaDatePicker = new org.jdatepicker.JDatePicker(modelPrevzem, "dd.MM.yyyy");
        org.jdatepicker.UtilDateModel modelVrnitev = new org.jdatepicker.UtilDateModel();
        datumVrnitveDatePicker = new org.jdatepicker.JDatePicker(modelVrnitev, "dd.MM.yyyy");
        avtomobilPanel = new javax.swing.JPanel();
        dodatnoZavarovanjeLabel = new javax.swing.JLabel();
        velikostVozilaLabel = new javax.swing.JLabel();
        tipVozilaLabel = new javax.swing.JLabel();
        motorLabel = new javax.swing.JLabel();
        menjalnikLabel = new javax.swing.JLabel();
        tipVozilaComboBox = new javax.swing.JComboBox<>();
        velikostVozilaSlider = new javax.swing.JSlider();
        bencinskiMotorRadioButton = new javax.swing.JRadioButton();
        dizelskiMotorRadioButton = new javax.swing.JRadioButton();
        rocniMenjalnikRadioButton = new javax.swing.JRadioButton();
        samodejniMenjalnikRadioButton = new javax.swing.JRadioButton();
        dodatnoZavarovanjeCheckBox = new javax.swing.JCheckBox();
        konecLabel = new javax.swing.JLabel();
        skupnaCenaTextField = new javax.swing.JTextField();
        skupnaCenaLabel = new javax.swing.JLabel();
        cenaNaDanLabel = new javax.swing.JLabel();
        cenaNaDanTextField = new javax.swing.JTextField();
        osebniPodatkiPanel = new javax.swing.JPanel();
        voznikSemZeSpinner = new javax.swing.JSpinner();
        imeTextField = new javax.swing.JTextField();
        moskiSpolRadioButton = new javax.swing.JRadioButton();
        telefonLabel = new javax.swing.JLabel();
        imeLabel = new javax.swing.JLabel();
        priimekLabel = new javax.swing.JLabel();
        spolLabel = new javax.swing.JLabel();
        starostLabel = new javax.swing.JLabel();
        naslovLabel = new javax.swing.JLabel();
        voznikSemZeLabel = new javax.swing.JLabel();
        zenskiSpolRadioButton = new javax.swing.JRadioButton();
        emailLabel = new javax.swing.JLabel();
        postaKrajLabel = new javax.swing.JLabel();
        priimekTextField = new javax.swing.JTextField();
        naslovTextField = new javax.swing.JTextField();
        telefonTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        postaKrajTextField = new javax.swing.JTextField();
        voznikSemZeLetLabel = new javax.swing.JLabel();
        starostLetLabel = new javax.swing.JLabel();
        starostSpinner = new javax.swing.JSpinner();
        povzetekNarocilaPanel = new javax.swing.JPanel();
        povzetekNarocilaScrollPane = new javax.swing.JScrollPane();
        povzetekNarocilaTable = new javax.swing.JTable();
        karticaNacinPlacilaRadioButton = new javax.swing.JRadioButton();
        gotovinaNacinPlacilaRadioButton = new javax.swing.JRadioButton();
        nacinPlacilaLabel = new javax.swing.JLabel();
        napredekProgressBar = new javax.swing.JProgressBar();
        naprejButton = new javax.swing.JButton();
        nazajButton = new javax.swing.JButton();
        avtekMenuBar = new javax.swing.JMenuBar();
        pomocMenu = new javax.swing.JMenu();
        oAplikacijiMenuItem = new javax.swing.JMenuItem();
        uporabaAplikacijeMenuItem = new javax.swing.JMenuItem();
        kontaktMenuItem = new javax.swing.JMenuItem();
        moznostiMenu = new javax.swing.JMenu();
        temniNacinRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();

        placiloKarticaDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        placiloKarticaDialog.setTitle("Zaključek in plačilo");
        placiloKarticaDialog.setAlwaysOnTop(true);
        placiloKarticaDialog.setIconImage(null);
        placiloKarticaDialog.setResizable(false);
        placiloKarticaDialog.setSize(new java.awt.Dimension(400, 300));

        ccvKodaLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        ccvKodaLabel.setText("CCV koda:");
        ccvKodaLabel.setToolTipText("");
        ccvKodaLabel.setPreferredSize(new java.awt.Dimension(200, 30));

        stevilkaKarticeLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        stevilkaKarticeLabel.setText("Številka kartice:");
        stevilkaKarticeLabel.setToolTipText("");
        stevilkaKarticeLabel.setPreferredSize(new java.awt.Dimension(200, 30));

        prekliciPlaciloButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        prekliciPlaciloButton.setText("Prekliči");
        prekliciPlaciloButton.setToolTipText("Prekliči plačilo s kartico");
        prekliciPlaciloButton.setActionCommand("onClickNextButton");
        prekliciPlaciloButton.setPreferredSize(new java.awt.Dimension(130, 35));
        prekliciPlaciloButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prekliciPlaciloButtonActionPerformed(evt);
            }
        });

        potrdiPlaciloButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        potrdiPlaciloButton.setText("Potrdi");
        potrdiPlaciloButton.setToolTipText("Potrdi plačilo");
        potrdiPlaciloButton.setActionCommand("onClickNextButton");
        potrdiPlaciloButton.setPreferredSize(new java.awt.Dimension(130, 35));
        potrdiPlaciloButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                potrdiPlaciloButtonActionPerformed(evt);
            }
        });

        stevilkaKarticePasswordField.setDocument(new JTextFieldLimit(12));
        stevilkaKarticePasswordField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        stevilkaKarticePasswordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        stevilkaKarticePasswordField.setEchoChar('X');
        stevilkaKarticePasswordField.setPreferredSize(new java.awt.Dimension(80, 30));

        ccvKodaPasswordField.setDocument(new JTextFieldLimit(3));
        ccvKodaPasswordField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        ccvKodaPasswordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ccvKodaPasswordField.setEchoChar('X');
        ccvKodaPasswordField.setPreferredSize(new java.awt.Dimension(80, 30));

        pokaziCcvRadioButton.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        pokaziCcvRadioButton.setText("Pokaži vnos");
        pokaziCcvRadioButton.setToolTipText("Pokaži CCV vnos");
        pokaziCcvRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pokaziCcvRadioButtonActionPerformed(evt);
            }
        });

        pokaziStevilkoKarticeRadioButton.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        pokaziStevilkoKarticeRadioButton.setText("Pokaži vnos");
        pokaziStevilkoKarticeRadioButton.setToolTipText("Pokaži CCV vnos");
        pokaziStevilkoKarticeRadioButton.setPreferredSize(new java.awt.Dimension(105, 30));
        pokaziStevilkoKarticeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pokaziStevilkoKarticeRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout placiloKarticaDialogLayout = new javax.swing.GroupLayout(placiloKarticaDialog.getContentPane());
        placiloKarticaDialog.getContentPane().setLayout(placiloKarticaDialogLayout);
        placiloKarticaDialogLayout.setHorizontalGroup(
            placiloKarticaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(placiloKarticaDialogLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(placiloKarticaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pokaziCcvRadioButton)
                    .addGroup(placiloKarticaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(placiloKarticaDialogLayout.createSequentialGroup()
                            .addComponent(prekliciPlaciloButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(potrdiPlaciloButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, placiloKarticaDialogLayout.createSequentialGroup()
                            .addComponent(stevilkaKarticeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(pokaziStevilkoKarticeRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, placiloKarticaDialogLayout.createSequentialGroup()
                            .addComponent(ccvKodaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ccvKodaPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(stevilkaKarticePasswordField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        placiloKarticaDialogLayout.setVerticalGroup(
            placiloKarticaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(placiloKarticaDialogLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(placiloKarticaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stevilkaKarticeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pokaziStevilkoKarticeRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stevilkaKarticePasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(placiloKarticaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ccvKodaPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccvKodaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pokaziCcvRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(placiloKarticaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prekliciPlaciloButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(potrdiPlaciloButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        placiloKarticaDialog.setLocationRelativeTo(this);

        placiloKarticaDialog.setLocationRelativeTo(this);

        izvediPlaciloDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        izvediPlaciloDialog.setTitle("Zaključek in plačilo");
        izvediPlaciloDialog.setAlwaysOnTop(true);
        izvediPlaciloDialog.setIconImage(null);
        izvediPlaciloDialog.setMinimumSize(new java.awt.Dimension(350, 150));
        izvediPlaciloDialog.setResizable(false);
        izvediPlaciloDialog.setSize(new java.awt.Dimension(350, 150));

        izvediPlaciloLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        izvediPlaciloLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        izvediPlaciloLabel.setText("Izvajam plačilo...");
        izvediPlaciloLabel.setToolTipText("");
        izvediPlaciloLabel.setPreferredSize(new java.awt.Dimension(200, 30));

        placiloProgressBar.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        placiloProgressBar.setToolTipText("Izvajam plačilo...");
        placiloProgressBar.setIndeterminate(true);
        placiloProgressBar.setMaximumSize(new java.awt.Dimension(300, 45));
        placiloProgressBar.setMinimumSize(new java.awt.Dimension(300, 45));
        placiloProgressBar.setPreferredSize(new java.awt.Dimension(300, 45));
        placiloProgressBar.setString("");

        javax.swing.GroupLayout izvediPlaciloDialogLayout = new javax.swing.GroupLayout(izvediPlaciloDialog.getContentPane());
        izvediPlaciloDialog.getContentPane().setLayout(izvediPlaciloDialogLayout);
        izvediPlaciloDialogLayout.setHorizontalGroup(
            izvediPlaciloDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, izvediPlaciloDialogLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(izvediPlaciloDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(placiloProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(izvediPlaciloLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36))
        );
        izvediPlaciloDialogLayout.setVerticalGroup(
            izvediPlaciloDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(izvediPlaciloDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(izvediPlaciloLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(placiloProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        izvediPlaciloDialog.setLocationRelativeTo(this);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Izposojevalnica vozil Avtek");
        setResizable(false);

        cardLayoutPanel.setLayout(new java.awt.CardLayout(10, 10));

        dobrodosliPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dobrodošli", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrains Mono", 0, 10))); // NOI18N

        avtekLabel.setFont(new java.awt.Font("JetBrains Mono", 1, 24)); // NOI18N
        avtekLabel.setText("aplikacija za izposojevalnico avtomobilov ");

        vstopiteButton.setFont(new java.awt.Font("JetBrains Mono", 1, 36)); // NOI18N
        vstopiteButton.setText("VSTOPITE");
        vstopiteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vstopiteButtonActionPerformed(evt);
            }
        });

        dobrodosliLabel.setFont(new java.awt.Font("JetBrains Mono", 1, 48)); // NOI18N
        dobrodosliLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dobrodosliLabel.setText("DOBRODOŠLI V AVTEK!");
        dobrodosliLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        dobrodosliLabel.setPreferredSize(new java.awt.Dimension(100, 50));

        seminarskaLabel.setFont(new java.awt.Font("JetBrains Mono", 1, 24)); // NOI18N
        seminarskaLabel.setText("1. seminarska naloga pri KČR");

        avtekLabel2.setFont(new java.awt.Font("JetBrains Mono", 1, 24)); // NOI18N
        avtekLabel2.setText("aplikacija za izposojevalnico avtomobilov ");

        avtorLabel.setFont(new java.awt.Font("JetBrains Mono", 1, 24)); // NOI18N
        avtorLabel.setText("Avtor: Anže Luzar");

        javax.swing.GroupLayout dobrodosliPanelLayout = new javax.swing.GroupLayout(dobrodosliPanel);
        dobrodosliPanel.setLayout(dobrodosliPanelLayout);
        dobrodosliPanelLayout.setHorizontalGroup(
            dobrodosliPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dobrodosliPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(dobrodosliPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dobrodosliPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(avtekLabel)
                        .addComponent(vstopiteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(seminarskaLabel)
                        .addComponent(avtorLabel))
                    .addComponent(dobrodosliLabel, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dobrodosliPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(avtekLabel2)
                .addContainerGap())
        );
        dobrodosliPanelLayout.setVerticalGroup(
            dobrodosliPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dobrodosliPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dobrodosliLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(avtekLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(seminarskaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(avtorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(avtekLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(vstopiteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cardLayoutPanel.add(dobrodosliPanel, "dobrodosliCard");

        prevzemVrnitevPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Podatki o prevzemu in vrnitvi", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrains Mono", 0, 10))); // NOI18N
        prevzemVrnitevPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        java.awt.GridBagLayout narociloPanelLayout = new java.awt.GridBagLayout();
        narociloPanelLayout.columnWidths = new int[] {0, 20, 0, 20, 0, 20, 0};
        narociloPanelLayout.rowHeights = new int[] {0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0};
        prevzemVrnitevPanel.setLayout(narociloPanelLayout);

        mestoVrnitveLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        mestoVrnitveLabel.setText("Mesto vrnitve:");
        mestoVrnitveLabel.setToolTipText("");
        mestoVrnitveLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        prevzemVrnitevPanel.add(mestoVrnitveLabel, gridBagConstraints);

        datumPrevzemaLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        datumPrevzemaLabel.setText("Datum prevzema:");
        datumPrevzemaLabel.setToolTipText("");
        datumPrevzemaLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        prevzemVrnitevPanel.add(datumPrevzemaLabel, gridBagConstraints);

        uraPrevzemaLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        uraPrevzemaLabel.setText("Ura prevzema:");
        uraPrevzemaLabel.setToolTipText("");
        uraPrevzemaLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        prevzemVrnitevPanel.add(uraPrevzemaLabel, gridBagConstraints);

        mestoPrevzemaLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        mestoPrevzemaLabel.setText("Mesto prevzema:");
        mestoPrevzemaLabel.setToolTipText("");
        mestoPrevzemaLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        prevzemVrnitevPanel.add(mestoPrevzemaLabel, gridBagConstraints);

        uraVrnitveLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        uraVrnitveLabel.setText("Ura vrnitve:");
        uraVrnitveLabel.setToolTipText("");
        uraVrnitveLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        prevzemVrnitevPanel.add(uraVrnitveLabel, gridBagConstraints);

        datumVrnitveLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        datumVrnitveLabel.setText("Datum vrnitve:");
        datumVrnitveLabel.setToolTipText("");
        datumVrnitveLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        prevzemVrnitevPanel.add(datumVrnitveLabel, gridBagConstraints);

        casPrevzemaSpinner.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        casPrevzemaSpinner.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.HOUR_OF_DAY));
        casPrevzemaSpinner.setToolTipText("Kdaj boste prevzeli vozilo?");
        casPrevzemaSpinner.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        casPrevzemaSpinner.setDoubleBuffered(true);
        casPrevzemaSpinner.setEditor(new javax.swing.JSpinner.DateEditor(casPrevzemaSpinner, "HH:mm"));
        casPrevzemaSpinner.setInheritsPopupMenu(true);
        casPrevzemaSpinner.setMaximumSize(new java.awt.Dimension(100, 25));
        casPrevzemaSpinner.setMinimumSize(new java.awt.Dimension(100, 25));
        casPrevzemaSpinner.setName(""); // NOI18N
        casPrevzemaSpinner.setPreferredSize(new java.awt.Dimension(200, 30));
        casPrevzemaSpinner.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        prevzemVrnitevPanel.add(casPrevzemaSpinner, gridBagConstraints);

        casVrnitveSpinner.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        casVrnitveSpinner.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.HOUR_OF_DAY));
        casVrnitveSpinner.setToolTipText("Kdaj boste vrnili vozilo?");
        casVrnitveSpinner.setDoubleBuffered(true);
        casVrnitveSpinner.setEditor(new javax.swing.JSpinner.DateEditor(casVrnitveSpinner, "HH:mm"));
        casVrnitveSpinner.setInheritsPopupMenu(true);
        casVrnitveSpinner.setMaximumSize(new java.awt.Dimension(100, 25));
        casVrnitveSpinner.setMinimumSize(new java.awt.Dimension(100, 25));
        casVrnitveSpinner.setName(""); // NOI18N
        casVrnitveSpinner.setPreferredSize(new java.awt.Dimension(200, 30));
        casVrnitveSpinner.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        prevzemVrnitevPanel.add(casVrnitveSpinner, gridBagConstraints);

        datumPrevzemaSpinner.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        Date dt = new Date();
        Calendar c = Calendar.getInstance();
        c.setTime(dt);
        c.add(Calendar.DATE, 1);
        dt = c.getTime();
        datumPrevzemaSpinner.setModel(new javax.swing.SpinnerDateModel(dt, new java.util.Date(), new java.util.Date(1609438500000L), java.util.Calendar.DAY_OF_MONTH));
        datumPrevzemaSpinner.setToolTipText("Kdaj boste prevzeli vozilo?");
        datumPrevzemaSpinner.setDoubleBuffered(true);
        datumPrevzemaSpinner.setEditor(new javax.swing.JSpinner.DateEditor(datumPrevzemaSpinner, "dd.MM.yyyy"));
        datumPrevzemaSpinner.setInheritsPopupMenu(true);
        datumPrevzemaSpinner.setMaximumSize(new java.awt.Dimension(100, 25));
        datumPrevzemaSpinner.setMinimumSize(new java.awt.Dimension(100, 25));
        datumPrevzemaSpinner.setName(""); // NOI18N
        datumPrevzemaSpinner.setPreferredSize(new java.awt.Dimension(200, 30));
        datumPrevzemaSpinner.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        prevzemVrnitevPanel.add(datumPrevzemaSpinner, gridBagConstraints);

        datumVrnitveSpinner.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        datumVrnitveSpinner.setModel(new javax.swing.SpinnerDateModel(dt, new java.util.Date(), new java.util.Date(1609438620000L), java.util.Calendar.DAY_OF_MONTH));
        datumVrnitveSpinner.setToolTipText("Kdaj boste vrnili vozilo?");
        datumVrnitveSpinner.setDoubleBuffered(true);
        datumVrnitveSpinner.setEditor(new javax.swing.JSpinner.DateEditor(datumVrnitveSpinner, "dd.MM.yyyy"));
        datumVrnitveSpinner.setInheritsPopupMenu(true);
        datumVrnitveSpinner.setMaximumSize(new java.awt.Dimension(100, 25));
        datumVrnitveSpinner.setMinimumSize(new java.awt.Dimension(100, 25));
        datumVrnitveSpinner.setName(""); // NOI18N
        datumVrnitveSpinner.setPreferredSize(new java.awt.Dimension(200, 30));
        datumVrnitveSpinner.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        prevzemVrnitevPanel.add(datumVrnitveSpinner, gridBagConstraints);

        mestoPrevzemaComboBox.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        mestoPrevzemaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ljubljana", "Maribor", "Celje", "Kranj", "Velenje", "Koper", "Novo Mesto", "Murska Sobota", "Jesenice", "Portorož", "letališče Brnik", "letališče Maribor" }));
        mestoPrevzemaComboBox.setToolTipText("Izberi mesto prevzema");
        mestoPrevzemaComboBox.setOpaque(false);
        mestoPrevzemaComboBox.setPreferredSize(new java.awt.Dimension(250, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        prevzemVrnitevPanel.add(mestoPrevzemaComboBox, gridBagConstraints);

        mestoVrnitveComboBox.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        mestoVrnitveComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ljubljana", "Maribor", "Celje", "Kranj", "Velenje", "Koper", "Novo Mesto", "Murska Sobota", "Jesenice", "Portorož", "letališče Brnik", "letališče Maribor" }));
        mestoVrnitveComboBox.setToolTipText("Izberi mesto vrnitve");
        mestoVrnitveComboBox.setOpaque(false);
        mestoVrnitveComboBox.setPreferredSize(new java.awt.Dimension(250, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        prevzemVrnitevPanel.add(mestoVrnitveComboBox, gridBagConstraints);

        datumPrevzemaDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datumPrevzemaDatePickerActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        prevzemVrnitevPanel.add(datumPrevzemaDatePicker, gridBagConstraints);
        javax.swing.JFormattedTextField textFieldDatumPrevzema = datumPrevzemaDatePicker.getFormattedTextField();
        textFieldDatumPrevzema.setFont(new java.awt.Font("JetBrains Mono", 0, 18));
        Calendar calendarNowDatumPrevzema = java.util.Calendar.getInstance();
        textFieldDatumPrevzema.setSize(new java.awt.Dimension(200, 30));
        textFieldDatumPrevzema.setVisible(false);
        datumPrevzemaDatePicker.getModel().setDate(calendarNowDatumPrevzema.get(Calendar.YEAR), calendarNowDatumPrevzema.get(Calendar.MONTH), calendarNowDatumPrevzema.get(Calendar.DAY_OF_MONTH));
        datumPrevzemaDatePicker.getModel().setSelected(true);
        // Code adding the component to the parent container - not shown here

        datumVrnitveDatePicker.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        datumVrnitveDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datumVrnitveDatePickerActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        prevzemVrnitevPanel.add(datumVrnitveDatePicker, gridBagConstraints);
        javax.swing.JFormattedTextField textFieldDatumVrnitve = datumVrnitveDatePicker.getFormattedTextField();
        textFieldDatumVrnitve.setFont(new java.awt.Font("JetBrains Mono", 0, 18));
        Calendar calendarNowDatumVrnitve = java.util.Calendar.getInstance();
        calendarNowDatumVrnitve.add(Calendar.DAY_OF_MONTH, 1);
        textFieldDatumVrnitve.setSize(new java.awt.Dimension(200, 30));
        textFieldDatumVrnitve.setVisible(false);
        datumVrnitveDatePicker.getModel().setDate(calendarNowDatumVrnitve.get(Calendar.YEAR), calendarNowDatumVrnitve.get(Calendar.MONTH), calendarNowDatumVrnitve.get(Calendar.DAY_OF_MONTH));
        datumVrnitveDatePicker.getModel().setSelected(true);
        // Code adding the component to the parent container - not shown here

        cardLayoutPanel.add(prevzemVrnitevPanel, "prevzemVrnitevCard");
        prevzemVrnitevPanel.getAccessibleContext().setAccessibleName("Podatki o vozilu in naročilu");

        avtomobilPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Podatki o vozilu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrains Mono", 0, 10))); // NOI18N
        avtomobilPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        java.awt.GridBagLayout avtomobilPanelLayout = new java.awt.GridBagLayout();
        avtomobilPanelLayout.columnWidths = new int[] {0, 20, 0, 20, 0, 20, 0};
        avtomobilPanelLayout.rowHeights = new int[] {0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0};
        avtomobilPanel.setLayout(avtomobilPanelLayout);

        dodatnoZavarovanjeLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        dodatnoZavarovanjeLabel.setText("Zavarovanje:");
        dodatnoZavarovanjeLabel.setToolTipText("");
        dodatnoZavarovanjeLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        avtomobilPanel.add(dodatnoZavarovanjeLabel, gridBagConstraints);
        dodatnoZavarovanjeLabel.getAccessibleContext().setAccessibleName("Zavarovanje");

        velikostVozilaLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        velikostVozilaLabel.setText("Velikost vozila:");
        velikostVozilaLabel.setToolTipText("");
        velikostVozilaLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        avtomobilPanel.add(velikostVozilaLabel, gridBagConstraints);

        tipVozilaLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        tipVozilaLabel.setText("Tip vozila:");
        tipVozilaLabel.setToolTipText("");
        tipVozilaLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        avtomobilPanel.add(tipVozilaLabel, gridBagConstraints);

        motorLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        motorLabel.setText("Motor:");
        motorLabel.setToolTipText("");
        motorLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        avtomobilPanel.add(motorLabel, gridBagConstraints);

        menjalnikLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        menjalnikLabel.setText("Menjalnik:");
        menjalnikLabel.setToolTipText("");
        menjalnikLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        avtomobilPanel.add(menjalnikLabel, gridBagConstraints);

        tipVozilaComboBox.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        tipVozilaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MB C180", "Audi A5", "Toyota Avensis", "Honda Accord", "Skoda Octavia" }));
        tipVozilaComboBox.setToolTipText("Izberi znamko avtomobila");
        tipVozilaComboBox.setOpaque(false);
        tipVozilaComboBox.setPreferredSize(new java.awt.Dimension(250, 30));
        tipVozilaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipVozilaComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        avtomobilPanel.add(tipVozilaComboBox, gridBagConstraints);

        velikostVozilaSlider.setFont(new java.awt.Font("JetBrains Mono", 0, 10)); // NOI18N
        velikostVozilaSlider.setMajorTickSpacing(1);
        velikostVozilaSlider.setMaximum(3);
        velikostVozilaSlider.setMinimum(1);
        velikostVozilaSlider.setPaintLabels(true);
        velikostVozilaSlider.setPaintTicks(true);
        velikostVozilaSlider.setSnapToTicks(true);
        velikostVozilaSlider.setToolTipText("Nastavi velikost vozila");
        velikostVozilaSlider.setValue(2);
        velikostVozilaSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        velikostVozilaSlider.setPreferredSize(new java.awt.Dimension(260, 50));
        Hashtable<Integer, JLabel> labels = new Hashtable<>();

        JLabel labelMajhen = new JLabel("majhen");
        labelMajhen.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
        JLabel labelSrednji = new JLabel("srednji");
        labelSrednji.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
        JLabel labelVelik = new JLabel("velik");
        labelVelik.setFont(new java.awt.Font("JetBrains Mono", 0, 12));

        labels.put(1, labelMajhen);
        labels.put(2, labelSrednji);
        labels.put(3, labelVelik);
        velikostVozilaSlider.setLabelTable(labels);
        velikostVozilaSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                velikostVozilaSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        avtomobilPanel.add(velikostVozilaSlider, gridBagConstraints);

        motorButtonGroup.add(bencinskiMotorRadioButton);
        bencinskiMotorRadioButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        bencinskiMotorRadioButton.setSelected(true);
        bencinskiMotorRadioButton.setText("bencinski");
        bencinskiMotorRadioButton.setToolTipText("Sem bencinar");
        bencinskiMotorRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bencinskiMotorRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        avtomobilPanel.add(bencinskiMotorRadioButton, gridBagConstraints);

        motorButtonGroup.add(dizelskiMotorRadioButton);
        dizelskiMotorRadioButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        dizelskiMotorRadioButton.setText("dizelski");
        dizelskiMotorRadioButton.setToolTipText("Sem dizel");
        dizelskiMotorRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dizelskiMotorRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        avtomobilPanel.add(dizelskiMotorRadioButton, gridBagConstraints);

        menjalnikButtonGroup.add(rocniMenjalnikRadioButton);
        rocniMenjalnikRadioButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        rocniMenjalnikRadioButton.setSelected(true);
        rocniMenjalnikRadioButton.setText("ročni");
        rocniMenjalnikRadioButton.setToolTipText("Sem ročni menjalnik");
        rocniMenjalnikRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rocniMenjalnikRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        avtomobilPanel.add(rocniMenjalnikRadioButton, gridBagConstraints);

        menjalnikButtonGroup.add(samodejniMenjalnikRadioButton);
        samodejniMenjalnikRadioButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        samodejniMenjalnikRadioButton.setText("samodejni");
        samodejniMenjalnikRadioButton.setToolTipText("Sem samodejni menjalnik");
        samodejniMenjalnikRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                samodejniMenjalnikRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        avtomobilPanel.add(samodejniMenjalnikRadioButton, gridBagConstraints);

        dodatnoZavarovanjeCheckBox.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        dodatnoZavarovanjeCheckBox.setText("Da (2 €/dan)");
        dodatnoZavarovanjeCheckBox.setOpaque(false);
        dodatnoZavarovanjeCheckBox.setPreferredSize(new java.awt.Dimension(250, 35));
        dodatnoZavarovanjeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodatnoZavarovanjeCheckBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        avtomobilPanel.add(dodatnoZavarovanjeCheckBox, gridBagConstraints);

        konecLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        konecLabel.setText("_____________");
        konecLabel.setToolTipText("");
        konecLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        avtomobilPanel.add(konecLabel, gridBagConstraints);

        skupnaCenaTextField.setEditable(false);
        skupnaCenaTextField.setFont(new java.awt.Font("JetBrains Mono", 1, 18)); // NOI18N
        skupnaCenaTextField.setText("0 €");
        skupnaCenaTextField.setToolTipText("Končni znesek najema vozila");
        skupnaCenaTextField.setPreferredSize(new java.awt.Dimension(250, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        avtomobilPanel.add(skupnaCenaTextField, gridBagConstraints);

        skupnaCenaLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        skupnaCenaLabel.setText("Skupna cena:");
        skupnaCenaLabel.setToolTipText("");
        skupnaCenaLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        avtomobilPanel.add(skupnaCenaLabel, gridBagConstraints);

        cenaNaDanLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        cenaNaDanLabel.setText("Cena na dan:");
        cenaNaDanLabel.setToolTipText("");
        cenaNaDanLabel.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        avtomobilPanel.add(cenaNaDanLabel, gridBagConstraints);

        cenaNaDanTextField.setEditable(false);
        cenaNaDanTextField.setFont(new java.awt.Font("JetBrains Mono", 1, 18)); // NOI18N
        cenaNaDanTextField.setText("0 €");
        cenaNaDanTextField.setToolTipText("Cena na dan za najema vozila");
        cenaNaDanTextField.setPreferredSize(new java.awt.Dimension(250, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        avtomobilPanel.add(cenaNaDanTextField, gridBagConstraints);

        cardLayoutPanel.add(avtomobilPanel, "avtomobilCard");

        osebniPodatkiPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Osebni podatki o naročniku", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrains Mono", 0, 10))); // NOI18N
        osebniPodatkiPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        osebniPodatkiPanel.setFont(new java.awt.Font("JetBrains Mono", 0, 10)); // NOI18N
        java.awt.GridBagLayout podatkiPanelLayout = new java.awt.GridBagLayout();
        podatkiPanelLayout.columnWidths = new int[] {0, 20, 0, 20, 0, 20, 0};
        podatkiPanelLayout.rowHeights = new int[] {0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0};
        osebniPodatkiPanel.setLayout(podatkiPanelLayout);

        voznikSemZeSpinner.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        voznikSemZeSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 81, 1));
        voznikSemZeSpinner.setToolTipText("Vaša starost");
        voznikSemZeSpinner.setEditor(new javax.swing.JSpinner.NumberEditor(voznikSemZeSpinner, ""));
        voznikSemZeSpinner.setInheritsPopupMenu(true);
        voznikSemZeSpinner.setMaximumSize(new java.awt.Dimension(100, 25));
        voznikSemZeSpinner.setMinimumSize(new java.awt.Dimension(100, 25));
        voznikSemZeSpinner.setName(""); // NOI18N
        voznikSemZeSpinner.setPreferredSize(new java.awt.Dimension(200, 30));
        voznikSemZeSpinner.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        osebniPodatkiPanel.add(voznikSemZeSpinner, gridBagConstraints);

        imeTextField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        imeTextField.setToolTipText("Vaše ime");
        imeTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        imeTextField.setMaximumSize(new java.awt.Dimension(300, 25));
        imeTextField.setMinimumSize(new java.awt.Dimension(300, 25));
        imeTextField.setOpaque(false);
        imeTextField.setPreferredSize(new java.awt.Dimension(300, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        osebniPodatkiPanel.add(imeTextField, gridBagConstraints);

        spolButtonGroup.add(moskiSpolRadioButton);
        moskiSpolRadioButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        moskiSpolRadioButton.setSelected(true);
        moskiSpolRadioButton.setText("moški");
        moskiSpolRadioButton.setToolTipText("Sem moški");
        moskiSpolRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moskiSpolRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        osebniPodatkiPanel.add(moskiSpolRadioButton, gridBagConstraints);

        telefonLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        telefonLabel.setText("Telefon:");
        telefonLabel.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        osebniPodatkiPanel.add(telefonLabel, gridBagConstraints);

        imeLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        imeLabel.setText("Ime:");
        imeLabel.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        osebniPodatkiPanel.add(imeLabel, gridBagConstraints);

        priimekLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        priimekLabel.setText("Priimek:");
        priimekLabel.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        osebniPodatkiPanel.add(priimekLabel, gridBagConstraints);

        spolLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        spolLabel.setText("Spol:");
        spolLabel.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        osebniPodatkiPanel.add(spolLabel, gridBagConstraints);

        starostLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        starostLabel.setText("Starost:");
        starostLabel.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        osebniPodatkiPanel.add(starostLabel, gridBagConstraints);

        naslovLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        naslovLabel.setText("Naslov:");
        naslovLabel.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        osebniPodatkiPanel.add(naslovLabel, gridBagConstraints);

        voznikSemZeLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        voznikSemZeLabel.setText("Voznik sem že:");
        voznikSemZeLabel.setToolTipText("");
        voznikSemZeLabel.setPreferredSize(new java.awt.Dimension(157, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        osebniPodatkiPanel.add(voznikSemZeLabel, gridBagConstraints);

        spolButtonGroup.add(zenskiSpolRadioButton);
        zenskiSpolRadioButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        zenskiSpolRadioButton.setText("ženski");
        zenskiSpolRadioButton.setToolTipText("Sem ženska");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        osebniPodatkiPanel.add(zenskiSpolRadioButton, gridBagConstraints);

        emailLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        emailLabel.setText("E-mail:");
        emailLabel.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        osebniPodatkiPanel.add(emailLabel, gridBagConstraints);

        postaKrajLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        postaKrajLabel.setText("Pošta in kraj:");
        postaKrajLabel.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        osebniPodatkiPanel.add(postaKrajLabel, gridBagConstraints);

        priimekTextField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        priimekTextField.setToolTipText("Vaš priimek");
        priimekTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        priimekTextField.setMaximumSize(new java.awt.Dimension(300, 25));
        priimekTextField.setMinimumSize(new java.awt.Dimension(300, 25));
        priimekTextField.setOpaque(false);
        priimekTextField.setPreferredSize(new java.awt.Dimension(300, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        osebniPodatkiPanel.add(priimekTextField, gridBagConstraints);

        naslovTextField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        naslovTextField.setToolTipText("Vaš naslov");
        naslovTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        naslovTextField.setMaximumSize(new java.awt.Dimension(300, 25));
        naslovTextField.setMinimumSize(new java.awt.Dimension(300, 25));
        naslovTextField.setOpaque(false);
        naslovTextField.setPreferredSize(new java.awt.Dimension(300, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        osebniPodatkiPanel.add(naslovTextField, gridBagConstraints);

        telefonTextField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        telefonTextField.setToolTipText("Vaš telefon");
        telefonTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        telefonTextField.setMaximumSize(new java.awt.Dimension(300, 25));
        telefonTextField.setMinimumSize(new java.awt.Dimension(300, 25));
        telefonTextField.setOpaque(false);
        telefonTextField.setPreferredSize(new java.awt.Dimension(300, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        osebniPodatkiPanel.add(telefonTextField, gridBagConstraints);

        emailTextField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        emailTextField.setToolTipText("Vaš e-mail");
        emailTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        emailTextField.setMaximumSize(new java.awt.Dimension(300, 25));
        emailTextField.setMinimumSize(new java.awt.Dimension(300, 25));
        emailTextField.setOpaque(false);
        emailTextField.setPreferredSize(new java.awt.Dimension(300, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        osebniPodatkiPanel.add(emailTextField, gridBagConstraints);

        postaKrajTextField.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        postaKrajTextField.setToolTipText("Vaša poštna številka");
        postaKrajTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        postaKrajTextField.setMaximumSize(new java.awt.Dimension(300, 25));
        postaKrajTextField.setMinimumSize(new java.awt.Dimension(300, 25));
        postaKrajTextField.setOpaque(false);
        postaKrajTextField.setPreferredSize(new java.awt.Dimension(300, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        osebniPodatkiPanel.add(postaKrajTextField, gridBagConstraints);

        voznikSemZeLetLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        voznikSemZeLetLabel.setText("[let]");
        voznikSemZeLetLabel.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        osebniPodatkiPanel.add(voznikSemZeLetLabel, gridBagConstraints);

        starostLetLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        starostLetLabel.setText("[let]");
        starostLetLabel.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        osebniPodatkiPanel.add(starostLetLabel, gridBagConstraints);

        starostSpinner.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        starostSpinner.setModel(new javax.swing.SpinnerNumberModel(18, 18, 99, 1));
        starostSpinner.setToolTipText("Koliko let imate že vozniški izpit?");
        starostSpinner.setEditor(new javax.swing.JSpinner.NumberEditor(starostSpinner, ""));
        starostSpinner.setInheritsPopupMenu(true);
        starostSpinner.setMaximumSize(new java.awt.Dimension(100, 25));
        starostSpinner.setMinimumSize(new java.awt.Dimension(100, 25));
        starostSpinner.setName(""); // NOI18N
        starostSpinner.setPreferredSize(new java.awt.Dimension(200, 30));
        starostSpinner.setRequestFocusEnabled(false);
        starostSpinner.setValue(18);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        osebniPodatkiPanel.add(starostSpinner, gridBagConstraints);

        cardLayoutPanel.add(osebniPodatkiPanel, "osebniPodatkiCard");

        povzetekNarocilaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Povzetek izposoje in način plačila", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrains Mono", 0, 10))); // NOI18N
        povzetekNarocilaPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        povzetekNarocilaTable.setFont(new java.awt.Font("JetBrains Mono", 0, 14)); // NOI18N
        povzetekNarocilaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Ime in priimek", null},
                {"Spol", null},
                {"Starost", null},
                {"Naslov", null},
                {"Telefon", null},
                {"Vozim že", null},
                {"Prevzem", null},
                {"Vrnitev", null},
                {"Velikost vozila", null},
                {"Tip vozila", null},
                {"Motor", null},
                {"Menjalnik", null},
                {"Zavarovanje", null},
                {"Cena na dan", null},
                {"Skupna cena", null}
            },
            new String [] {
                "Podatek", "Vrednost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        povzetekNarocilaTable.setToolTipText("Tabela s povzetkom Vašega naročila");
        povzetekNarocilaTable.setRowHeight(20);
        povzetekNarocilaTable.getTableHeader().setReorderingAllowed(false);
        povzetekNarocilaScrollPane.setViewportView(povzetekNarocilaTable);
        if (povzetekNarocilaTable.getColumnModel().getColumnCount() > 0) {
            povzetekNarocilaTable.getColumnModel().getColumn(0).setMinWidth(150);
            povzetekNarocilaTable.getColumnModel().getColumn(0).setPreferredWidth(150);
            povzetekNarocilaTable.getColumnModel().getColumn(0).setMaxWidth(150);
            povzetekNarocilaTable.getColumnModel().getColumn(0).setHeaderValue("Podatek");
            povzetekNarocilaTable.getColumnModel().getColumn(1).setResizable(false);
            povzetekNarocilaTable.getColumnModel().getColumn(1).setHeaderValue("Vrednost");
        }
        javax.swing.table.JTableHeader tableHeader = povzetekNarocilaTable.getTableHeader();
        tableHeader.setFont(new java.awt.Font("JetBrains Mono", 0, 14));

        nacinPlacilaButtonGroup.add(karticaNacinPlacilaRadioButton);
        karticaNacinPlacilaRadioButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        karticaNacinPlacilaRadioButton.setSelected(true);
        karticaNacinPlacilaRadioButton.setText("kreditna kartica (plačilo takoj)");
        karticaNacinPlacilaRadioButton.setToolTipText("Želim plačati s kartico");

        nacinPlacilaButtonGroup.add(gotovinaNacinPlacilaRadioButton);
        gotovinaNacinPlacilaRadioButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        gotovinaNacinPlacilaRadioButton.setText("gotovina (plačilo ob prevzemu)");
        gotovinaNacinPlacilaRadioButton.setToolTipText("Želim plačati z gotovino");

        nacinPlacilaLabel.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        nacinPlacilaLabel.setText("Način plačila:");
        nacinPlacilaLabel.setToolTipText("");
        nacinPlacilaLabel.setPreferredSize(new java.awt.Dimension(200, 30));

        javax.swing.GroupLayout povzetekNarocilaPanelLayout = new javax.swing.GroupLayout(povzetekNarocilaPanel);
        povzetekNarocilaPanel.setLayout(povzetekNarocilaPanelLayout);
        povzetekNarocilaPanelLayout.setHorizontalGroup(
            povzetekNarocilaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(povzetekNarocilaScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(povzetekNarocilaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nacinPlacilaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(povzetekNarocilaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gotovinaNacinPlacilaRadioButton)
                    .addComponent(karticaNacinPlacilaRadioButton))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        povzetekNarocilaPanelLayout.setVerticalGroup(
            povzetekNarocilaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(povzetekNarocilaPanelLayout.createSequentialGroup()
                .addComponent(povzetekNarocilaScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(povzetekNarocilaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nacinPlacilaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(karticaNacinPlacilaRadioButton))
                .addGap(18, 18, 18)
                .addComponent(gotovinaNacinPlacilaRadioButton)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        cardLayoutPanel.add(povzetekNarocilaPanel, "povzetekNarocilaCard");

        napredekProgressBar.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        napredekProgressBar.setToolTipText("Napredek");
        napredekProgressBar.setPreferredSize(new java.awt.Dimension(150, 35));
        napredekProgressBar.setStringPainted(true);

        naprejButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        naprejButton.setText("Naprej");
        naprejButton.setToolTipText("Na naslednjo stran");
        naprejButton.setActionCommand("onClickNextButton");
        naprejButton.setPreferredSize(new java.awt.Dimension(105, 35));
        naprejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                naprejButtonActionPerformed(evt);
            }
        });

        nazajButton.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        nazajButton.setText("Nazaj");
        nazajButton.setToolTipText("Na prejšnjo stran");
        nazajButton.setActionCommand("onClickNextButton");
        nazajButton.setPreferredSize(new java.awt.Dimension(105, 35));
        nazajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nazajButtonActionPerformed(evt);
            }
        });

        avtekMenuBar.setFont(new java.awt.Font("JetBrains Mono", 0, 10)); // NOI18N

        pomocMenu.setText("Pomoč");
        pomocMenu.setToolTipText("Pomagajte mi malo");
        pomocMenu.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N

        oAplikacijiMenuItem.setText("O aplikaciji");
        oAplikacijiMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oAplikacijiMenuItemActionPerformed(evt);
            }
        });
        pomocMenu.add(oAplikacijiMenuItem);

        uporabaAplikacijeMenuItem.setText("Uporaba aplikacije");
        uporabaAplikacijeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uporabaAplikacijeMenuItemActionPerformed(evt);
            }
        });
        pomocMenu.add(uporabaAplikacijeMenuItem);

        kontaktMenuItem.setText("Kontakt");
        kontaktMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kontaktMenuItemActionPerformed(evt);
            }
        });
        pomocMenu.add(kontaktMenuItem);

        avtekMenuBar.add(pomocMenu);

        moznostiMenu.setText("Možnosti");
        moznostiMenu.setToolTipText("Nastavi možnosti");
        moznostiMenu.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N

        temniNacinRadioButtonMenuItem.setText("Temni način");
        temniNacinRadioButtonMenuItem.setToolTipText("Aktiviraj temni način aplikacije");
        temniNacinRadioButtonMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temniNacinRadioButtonMenuItemActionPerformed(evt);
            }
        });
        moznostiMenu.add(temniNacinRadioButtonMenuItem);

        avtekMenuBar.add(moznostiMenu);

        setJMenuBar(avtekMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cardLayoutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(nazajButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(napredekProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(naprejButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cardLayoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(nazajButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(napredekProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(naprejButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean checkPrevzemVrnitev() {
        if (!((Date) this.datumPrevzemaSpinner.getValue()).before((Date) this.datumVrnitveSpinner.getValue())) {
            JLabel label = new JLabel("Datum vrnitve mora biti za datumom prevzema!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "Napaka", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (((Date) this.datumPrevzemaSpinner.getValue()).before(new Date())) {
            JLabel label = new JLabel("Datum prevzema ne sme biti v preteklosti!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "Napaka", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (((Date) this.datumVrnitveSpinner.getValue()).before(new Date())) {
            JLabel label = new JLabel("Datum vrnitve ne sme biti v preteklosti!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "Napaka", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private boolean checkOsebniPodatki() {
        if (this.imeTextField.getText().isBlank()) {
            JLabel label = new JLabel("Ime ne more biti prazno!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "Opozorilo", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (this.priimekTextField.getText().isBlank()) {
            JLabel label = new JLabel("Priimek ne more biti prazen!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "Opozorilo", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (this.naslovTextField.getText().isBlank()) {
            JLabel label = new JLabel("Naslov ne more biti prazen!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "Opozorilo", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (this.postaKrajTextField.getText().isBlank()) {
            JLabel label = new JLabel("Poštna številka ne sme biti prazna!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "Opozorilo", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (this.emailTextField.getText().isBlank()) {
            JLabel label = new JLabel("Kraj ne sme biti prazen!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "Opozorilo", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (this.telefonTextField.getText().isBlank()) {
            JLabel label = new JLabel("Telefon ne sme biti prazen!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "Opozorilo", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }

    private void fillPovzetekNarocilaTable() {
        String velikost = "";
        switch (this.velikostVozilaSlider.getValue()) {
            case 1:
                velikost = "majhna";
                break;
            case 2:
                velikost = "srednja";
                break;
            default:
                velikost = "velika";
                break;
        }

        Date casPrevzema = (Date) this.casPrevzemaSpinner.getValue();
        Date casVrnitve = (Date) this.casVrnitveSpinner.getValue();
        Date datumPrevzema = (Date) this.datumPrevzemaSpinner.getValue();
        Date datumVrnitve = (Date) this.datumVrnitveSpinner.getValue();

        SimpleDateFormat sdfCas = new SimpleDateFormat("HH:mm");
        SimpleDateFormat sdfDatum = new SimpleDateFormat("dd.MM.yyyy");

        String formatCasPrevzema = sdfCas.format(casPrevzema);
        String formatCasVrnitve = sdfCas.format(casVrnitve);
        String formatDatumPrevzema = sdfDatum.format(datumPrevzema);
        String formatDatumVrnitve = sdfDatum.format(datumVrnitve);

        povzetekNarocilaTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {"Ime in priimek", this.imeTextField.getText() + " " + this.priimekTextField.getText()},
                    {"Spol", this.moskiSpolRadioButton.isSelected() ? "moški" : "ženski"},
                    {"Starost", this.starostSpinner.getValue()},
                    {"Naslov", this.naslovTextField.getText()},
                    {"Telefon", this.telefonTextField.getText()},
                    {"Vozim že", this.voznikSemZeSpinner.getValue()},
                    {"Prevzem", formatDatumPrevzema + " ob " + formatCasPrevzema},
                    {"Vrnitev", formatDatumVrnitve + " ob " + formatCasVrnitve},
                    {"Velikost vozila", velikost},
                    {"Tip vozila", this.tipVozilaComboBox.getSelectedItem()},
                    {"Motor", this.bencinskiMotorRadioButton.isSelected() ? "bencinski" : "dizelski"},
                    {"Menjalnik", this.rocniMenjalnikRadioButton.isSelected() ? "ročni" : "samodejni"},
                    {"Zavarovanje", this.dodatnoZavarovanjeCheckBox.isSelected() ? "DA(želim dodatno zavarovanje)" : "NE"},
                    {"Cena na dan", this.cenaNaDanTextField.getText()},
                    {"Skupna cena", this.skupnaCenaTextField.getText()}
                },
                new String[]{
                    "Podatek", "Vrednost"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
    }

    private void calculatePrice() {
        float skupnaCena = 0;
        float cenaNaDan = 0;

        Date datumPrevzema = (Date) this.datumPrevzemaSpinner.getValue();
        Date datumVrnitve = (Date) this.datumVrnitveSpinner.getValue();
        String tipVozila = (String) this.tipVozilaComboBox.getSelectedItem();
        boolean dodatnoZavarovanje = this.dodatnoZavarovanjeCheckBox.isSelected();
        boolean samodejniMenjalnik = this.samodejniMenjalnikRadioButton.isSelected();
        boolean dizelskiMotor = this.dizelskiMotorRadioButton.isSelected();

        long diffInMillies = Math.abs(datumVrnitve.getTime() - datumPrevzema.getTime());
        long diffInDays = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);
        diffInDays++;

        cenaNaDan += ceneVozil.get(tipVozila);

        if (dodatnoZavarovanje) {
            cenaNaDan += 2;
        }

        if (samodejniMenjalnik) {
            cenaNaDan += 1.5;
        }

        if (dizelskiMotor) {
            cenaNaDan += 1.5;
        }

        skupnaCena = cenaNaDan * diffInDays;

        this.cenaNaDanTextField.setText(String.valueOf(cenaNaDan) + " €");
        this.skupnaCenaTextField.setText(String.valueOf(skupnaCena) + " €");
    }

    private void naprejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_naprejButtonActionPerformed
        java.awt.CardLayout cardLayout = (java.awt.CardLayout) this.cardLayoutPanel.getLayout();

        boolean validation = true;

        if (this.cardCounter % 5 == 0) {
            this.napredekProgressBar.setValue(0);
            this.napredekProgressBar.setString("0%");
        }

        if (this.cardCounter % 5 == 1) {
            validation = this.checkPrevzemVrnitev();
        }

        if (this.cardCounter % 5 == 3) {
            validation = this.checkOsebniPodatki();
            this.fillPovzetekNarocilaTable();
        }

        if (this.cardCounter % 5 == 4) {
            if (this.karticaNacinPlacilaRadioButton.isSelected()) {
                this.placiloKarticaDialog.setVisible(true);
                validation = false;
            } else {
                this.napredekProgressBar.setValue((this.napredekProgressBar.getValue() + 20) % 100);
                this.napredekProgressBar.setString(Integer.toString(this.napredekProgressBar.getValue()) + "%");
                JLabel label = new JLabel("<html>Naročilo je uspešno zaključeno!<br/>Plačali boste ob prevzemu.</html>");
                label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
                JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "Zaključek", JOptionPane.INFORMATION_MESSAGE);
            }
            this.resetAllValues();
        }

        if (validation) {
            cardLayout.next(this.cardLayoutPanel);
            this.cardCounter++;
            this.napredekProgressBar.setValue((this.napredekProgressBar.getValue() + 20) % 100);
            this.napredekProgressBar.setString(Integer.toString(this.napredekProgressBar.getValue()) + "%");
        }

        if (this.cardCounter % 5 == 2) {
            calculatePrice();
        }
    }//GEN-LAST:event_naprejButtonActionPerformed

    private void moskiSpolRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moskiSpolRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moskiSpolRadioButtonActionPerformed

    private void nazajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nazajButtonActionPerformed
        if (this.cardCounter % 5 == 0) {
            this.napredekProgressBar.setValue(0);
            this.napredekProgressBar.setString("0%");
        } else {
            java.awt.CardLayout cardLayout = (java.awt.CardLayout) this.cardLayoutPanel.getLayout();
            cardLayout.previous(this.cardLayoutPanel);
            this.cardCounter--;
            this.napredekProgressBar.setValue((this.napredekProgressBar.getValue() - 20) % 100);
            this.napredekProgressBar.setString(Integer.toString(this.napredekProgressBar.getValue()) + "%");
        }
    }//GEN-LAST:event_nazajButtonActionPerformed

    private void dizelskiMotorRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dizelskiMotorRadioButtonActionPerformed
        calculatePrice();
    }//GEN-LAST:event_dizelskiMotorRadioButtonActionPerformed

    private void samodejniMenjalnikRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_samodejniMenjalnikRadioButtonActionPerformed
        calculatePrice();
    }//GEN-LAST:event_samodejniMenjalnikRadioButtonActionPerformed

    private void prekliciPlaciloButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prekliciPlaciloButtonActionPerformed
        this.placiloKarticaDialog.setVisible(false);
        this.stevilkaKarticePasswordField.setText("");
        this.ccvKodaPasswordField.setText("");
    }//GEN-LAST:event_prekliciPlaciloButtonActionPerformed

    private boolean checkKartica() {
        char[] stevilkaKartice = this.stevilkaKarticePasswordField.getPassword();
        char[] ccvKoda = this.ccvKodaPasswordField.getPassword();
        if (stevilkaKartice.length == 0) {
            JLabel label = new JLabel("Številka kartice ne sme biti prazna!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.placiloKarticaDialog, label, "Opozorilo", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (stevilkaKartice.length != 12) {
            JLabel label = new JLabel("Številka kartice mora biti dolga 8 znakov!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.placiloKarticaDialog, label, "Opozorilo", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (ccvKoda.length == 0) {
            JLabel label = new JLabel("CCV koda ne sme biti prazna!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.placiloKarticaDialog, label, "Opozorilo", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (ccvKoda.length != 3) {
            JLabel label = new JLabel("CCV koda mora biti dolga 3 znake!");
            label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
            JOptionPane.showMessageDialog(this.placiloKarticaDialog, label, "Opozorilo", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }

    private void potrdiPlaciloButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_potrdiPlaciloButtonActionPerformed
        if (checkKartica()) {
            this.placiloKarticaDialog.setVisible(false);
            this.izvediPlaciloDialog.setVisible(true);

            SwingWorker<Void, Void> sw = new SwingWorker<Void, Void>() {
                @Override
                protected Void doInBackground() throws Exception {
                    TimeUnit.MILLISECONDS.sleep(3000);
                    return null;
                }

                @Override
                protected void done() {
                    izvediPlaciloDialog.dispose();

                    JLabel label = new JLabel("<html>Naročilo je uspešno zaključeno in<br/> plačano! Veselimo se že Vašega prevzema.</html>");
                    label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
                    JOptionPane.showMessageDialog(cardLayoutPanel, label, "Zaključek", JOptionPane.INFORMATION_MESSAGE);

                    java.awt.CardLayout cardLayout = (java.awt.CardLayout) cardLayoutPanel.getLayout();
                    cardLayout.next(cardLayoutPanel);
                    cardCounter++;
                    napredekProgressBar.setValue((napredekProgressBar.getValue() + 20) % 100);
                    napredekProgressBar.setString(Integer.toString(napredekProgressBar.getValue()) + "%");
                }
            };

            sw.execute();
            this.izvediPlaciloDialog.setVisible(true);
        }
    }//GEN-LAST:event_potrdiPlaciloButtonActionPerformed

    private void vstopiteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vstopiteButtonActionPerformed
        java.awt.CardLayout cardLayout = (java.awt.CardLayout) this.cardLayoutPanel.getLayout();
        cardLayout.next(this.cardLayoutPanel);
        this.cardCounter++;
        this.napredekProgressBar.setValue((this.napredekProgressBar.getValue() + 20) % 100);
        this.napredekProgressBar.setString(Integer.toString(this.napredekProgressBar.getValue()) + "%");
    }//GEN-LAST:event_vstopiteButtonActionPerformed

    private void oAplikacijiMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oAplikacijiMenuItemActionPerformed
        JLabel label = new JLabel("<html>Pozdravljeni! Ste v aplikaciji za izposojevalnico avtomobilov Avtek, kjer si<br/>"
                + "prizadevamo, da bi si vsak lahko kadarkoli izposodil vozilo po svojih željah.</html>");
        label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
        JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "O aplikaciji", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_oAplikacijiMenuItemActionPerformed

    private void uporabaAplikacijeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uporabaAplikacijeMenuItemActionPerformed
        JLabel label = new JLabel("<html>Uporaba aplikacije je enostavna. Na sredi okna se Vam prikaže<br/>"
                + "trenutna aktivnost. S klikom na gumba 'Naprej' in 'Nazaj' prehajate <br/>"
                + "med aktivnostmi. Aplikacija Vas bo vodila pri izpolnjevanju obrazca.</html>");
        label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
        JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "Uporaba aplikacije", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_uporabaAplikacijeMenuItemActionPerformed

    private void kontaktMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kontaktMenuItemActionPerformed
        JLabel label = new JLabel("<html>Naši kontaktni podatki so naslednji:<br/><br/>"
                + "Ime: Izposojevalnica avtomobilov Avtek <br/>"
                + "Naslov: Prazne Gume 10, 1000 Ljubljana <br/>"
                + "Telefon: 041-789-523 <br/>"
                + "E-mail: avtek@gmail.com</html>");
        label.setFont(new java.awt.Font("JetBrains Mono", 0, 12));
        JOptionPane.showMessageDialog(this.cardLayoutPanel, label, "Kontaktni podatki", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_kontaktMenuItemActionPerformed

    private void velikostVozilaSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_velikostVozilaSliderStateChanged
        switch (this.velikostVozilaSlider.getValue()) {
            case 1:
                tipVozilaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Renault Clio", "Mini Cooper", "Renault Twingo", "MB A", "MB GLA"}));
                break;
            case 2:
                tipVozilaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"MB C180", "Audi A5", "Toyota Avensis", "Honda Accord", "Skoda Octavia"}));
                break;
            default:
                tipVozilaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"MB GLC", "Porsche Cayenne", "Audi SQ7", "VW Touran", "MB Vito"}));
                break;
        }
        this.calculatePrice();
    }//GEN-LAST:event_velikostVozilaSliderStateChanged

    private void resetAllValues() {
        this.datumPrevzemaSpinner.setValue(new Date());
        this.casPrevzemaSpinner.setValue(new Date());
        this.datumVrnitveSpinner.setValue(new Date());
        this.casVrnitveSpinner.setValue(new Date());
        this.imeTextField.setText("");
        this.priimekTextField.setText("");
        this.emailTextField.setText("");
        this.telefonTextField.setText("");
        this.postaKrajTextField.setText("");
        this.naslovTextField.setText("");
        this.starostSpinner.setValue(18);
        this.voznikSemZeSpinner.setValue(1);
        this.stevilkaKarticePasswordField.setText("");
        this.ccvKodaPasswordField.setText("");
    }

    private void rocniMenjalnikRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rocniMenjalnikRadioButtonActionPerformed
        calculatePrice();
    }//GEN-LAST:event_rocniMenjalnikRadioButtonActionPerformed

    private void bencinskiMotorRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bencinskiMotorRadioButtonActionPerformed
        calculatePrice();
    }//GEN-LAST:event_bencinskiMotorRadioButtonActionPerformed

    private void tipVozilaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipVozilaComboBoxActionPerformed
        calculatePrice();
    }//GEN-LAST:event_tipVozilaComboBoxActionPerformed

    private void dodatnoZavarovanjeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodatnoZavarovanjeCheckBoxActionPerformed
        calculatePrice();
    }//GEN-LAST:event_dodatnoZavarovanjeCheckBoxActionPerformed

    private void pokaziStevilkoKarticeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pokaziStevilkoKarticeRadioButtonActionPerformed
        if (this.pokaziStevilkoKarticeRadioButton.isSelected()) {
            this.stevilkaKarticePasswordField.setEchoChar((char) 0);
        } else {
            this.stevilkaKarticePasswordField.setEchoChar('X');
        }
    }//GEN-LAST:event_pokaziStevilkoKarticeRadioButtonActionPerformed

    private void pokaziCcvRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pokaziCcvRadioButtonActionPerformed
        if (this.pokaziCcvRadioButton.isSelected()) {
            this.ccvKodaPasswordField.setEchoChar((char) 0);
        } else {
            this.ccvKodaPasswordField.setEchoChar('X');
        }
    }//GEN-LAST:event_pokaziCcvRadioButtonActionPerformed

    private void datumPrevzemaDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datumPrevzemaDatePickerActionPerformed
        this.datumPrevzemaSpinner.setValue(this.datumPrevzemaDatePicker.getModel().getValue());
    }//GEN-LAST:event_datumPrevzemaDatePickerActionPerformed

    private void datumVrnitveDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datumVrnitveDatePickerActionPerformed
        this.datumVrnitveSpinner.setValue(this.datumVrnitveDatePicker.getModel().getValue());
    }//GEN-LAST:event_datumVrnitveDatePickerActionPerformed

    private void temniNacinRadioButtonMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temniNacinRadioButtonMenuItemActionPerformed
        if (this.temniNacinRadioButtonMenuItem.isSelected()) {
            try {
                BasicLookAndFeel darcula = new DarculaLaf();
                UIManager.setLookAndFeel(darcula);
                SwingUtilities.updateComponentTreeUI(this);
                this.pack();
            } catch (Exception ex) {
                System.err.println("Failed to initialize LaF.");
            }
        } else {
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                SwingUtilities.updateComponentTreeUI(this);
                this.pack();
            } catch (Exception ex) {
                System.err.println("Failed to initialize LaF.");
            }
        }
    }//GEN-LAST:event_temniNacinRadioButtonMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IzposojevalnicaAvtomobilov.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IzposojevalnicaAvtomobilov.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IzposojevalnicaAvtomobilov.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IzposojevalnicaAvtomobilov.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IzposojevalnicaAvtomobilov().setVisible(true);
            }
        });
    }

    private int cardCounter = 0;
    private Map<String, Integer> ceneVozil = new HashMap<String, Integer>() {
        {
            put("Renault Clio", 10);
            put("Mini Cooper", 11);
            put("Renault Twingo", 12);
            put("MB A", 15);
            put("MB GLA", 20);
            put("MB C180", 27);
            put("Audi A5", 20);
            put("Toyota Avensis", 18);
            put("Honda Accord", 15);
            put("Skoda Octavia", 17);
            put("MB GLC", 35);
            put("Porsche Cayenne", 50);
            put("Audi SQ7", 40);
            put("VW Touran", 24);
            put("MB Vito", 31);

        }
    };

    public class JTextFieldLimit extends PlainDocument {

        private int limit;

        JTextFieldLimit(int limit) {
            super();
            this.limit = limit;
        }

        public void insertString(int offset, String str, AttributeSet attr) throws BadLocationException {
            if (str == null) {
                return;
            }

            if ((getLength() + str.length()) <= limit && isNumeric(str)) {
                super.insertString(offset, str, attr);
            }
        }

        public boolean isNumeric(String strNum) {
            if (strNum == null) {
                return false;
            }
            try {
                Integer.parseInt(strNum);
            } catch (NumberFormatException nfe) {
                return false;
            }
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avtekLabel;
    private javax.swing.JLabel avtekLabel2;
    private javax.swing.JMenuBar avtekMenuBar;
    private javax.swing.JPanel avtomobilPanel;
    private javax.swing.JLabel avtorLabel;
    private javax.swing.JRadioButton bencinskiMotorRadioButton;
    private javax.swing.JPanel cardLayoutPanel;
    private javax.swing.JSpinner casPrevzemaSpinner;
    private javax.swing.JSpinner casVrnitveSpinner;
    private javax.swing.JLabel ccvKodaLabel;
    private javax.swing.JPasswordField ccvKodaPasswordField;
    private javax.swing.JLabel cenaNaDanLabel;
    private javax.swing.JTextField cenaNaDanTextField;
    private org.jdatepicker.JDatePicker datumPrevzemaDatePicker;
    private javax.swing.JLabel datumPrevzemaLabel;
    private javax.swing.JSpinner datumPrevzemaSpinner;
    private org.jdatepicker.JDatePicker datumVrnitveDatePicker;
    private javax.swing.JLabel datumVrnitveLabel;
    private javax.swing.JSpinner datumVrnitveSpinner;
    private javax.swing.JRadioButton dizelskiMotorRadioButton;
    private javax.swing.JLabel dobrodosliLabel;
    private javax.swing.JPanel dobrodosliPanel;
    private javax.swing.JCheckBox dodatnoZavarovanjeCheckBox;
    private javax.swing.JLabel dodatnoZavarovanjeLabel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JRadioButton gotovinaNacinPlacilaRadioButton;
    private javax.swing.JLabel imeLabel;
    private javax.swing.JTextField imeTextField;
    private javax.swing.JDialog izvediPlaciloDialog;
    private javax.swing.JLabel izvediPlaciloLabel;
    private javax.swing.JRadioButton karticaNacinPlacilaRadioButton;
    private javax.swing.JLabel konecLabel;
    private javax.swing.JMenuItem kontaktMenuItem;
    private javax.swing.ButtonGroup menjalnikButtonGroup;
    private javax.swing.JLabel menjalnikLabel;
    private javax.swing.JComboBox<String> mestoPrevzemaComboBox;
    private javax.swing.JLabel mestoPrevzemaLabel;
    private javax.swing.JComboBox<String> mestoVrnitveComboBox;
    private javax.swing.JLabel mestoVrnitveLabel;
    private javax.swing.JRadioButton moskiSpolRadioButton;
    private javax.swing.ButtonGroup motorButtonGroup;
    private javax.swing.JLabel motorLabel;
    private javax.swing.JMenu moznostiMenu;
    private javax.swing.ButtonGroup nacinPlacilaButtonGroup;
    private javax.swing.JLabel nacinPlacilaLabel;
    private javax.swing.JProgressBar napredekProgressBar;
    private javax.swing.JButton naprejButton;
    private javax.swing.JLabel naslovLabel;
    private javax.swing.JTextField naslovTextField;
    private javax.swing.JButton nazajButton;
    private javax.swing.JMenuItem oAplikacijiMenuItem;
    private javax.swing.JPanel osebniPodatkiPanel;
    private javax.swing.JDialog placiloKarticaDialog;
    private javax.swing.JProgressBar placiloProgressBar;
    private javax.swing.JRadioButton pokaziCcvRadioButton;
    private javax.swing.JRadioButton pokaziStevilkoKarticeRadioButton;
    private javax.swing.JMenu pomocMenu;
    private javax.swing.JLabel postaKrajLabel;
    private javax.swing.JTextField postaKrajTextField;
    private javax.swing.JButton potrdiPlaciloButton;
    private javax.swing.JPanel povzetekNarocilaPanel;
    private javax.swing.JScrollPane povzetekNarocilaScrollPane;
    private javax.swing.JTable povzetekNarocilaTable;
    private javax.swing.JButton prekliciPlaciloButton;
    private javax.swing.JPanel prevzemVrnitevPanel;
    private javax.swing.JLabel priimekLabel;
    private javax.swing.JTextField priimekTextField;
    private javax.swing.JRadioButton rocniMenjalnikRadioButton;
    private javax.swing.JRadioButton samodejniMenjalnikRadioButton;
    private javax.swing.JLabel seminarskaLabel;
    private javax.swing.JLabel skupnaCenaLabel;
    private javax.swing.JTextField skupnaCenaTextField;
    private javax.swing.ButtonGroup spolButtonGroup;
    private javax.swing.JLabel spolLabel;
    private javax.swing.JLabel starostLabel;
    private javax.swing.JLabel starostLetLabel;
    private javax.swing.JSpinner starostSpinner;
    private javax.swing.JLabel stevilkaKarticeLabel;
    private javax.swing.JPasswordField stevilkaKarticePasswordField;
    private javax.swing.JLabel telefonLabel;
    private javax.swing.JTextField telefonTextField;
    private javax.swing.JRadioButtonMenuItem temniNacinRadioButtonMenuItem;
    private javax.swing.JComboBox<String> tipVozilaComboBox;
    private javax.swing.JLabel tipVozilaLabel;
    private javax.swing.JMenuItem uporabaAplikacijeMenuItem;
    private javax.swing.JLabel uraPrevzemaLabel;
    private javax.swing.JLabel uraVrnitveLabel;
    private javax.swing.JLabel velikostVozilaLabel;
    private javax.swing.JSlider velikostVozilaSlider;
    private javax.swing.JLabel voznikSemZeLabel;
    private javax.swing.JLabel voznikSemZeLetLabel;
    private javax.swing.JSpinner voznikSemZeSpinner;
    private javax.swing.JButton vstopiteButton;
    private javax.swing.JRadioButton zenskiSpolRadioButton;
    // End of variables declaration//GEN-END:variables

}
